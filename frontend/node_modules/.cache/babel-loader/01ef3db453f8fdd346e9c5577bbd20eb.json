{"ast":null,"code":"var _jsxFileName = \"/Users/woosukkang/Desktop/cocktail-builder/cocktail-builder/frontend/src/components/Search/ingredients.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CocktailsDataService from \"../../services/cocktails.js\";\nimport PlacesAutocomplete from \"react-places-autocomplete\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CocktailsList = props => {\n  _s();\n\n  const [cocktails, setCocktails] = useState([]);\n  const [searchIngredients, setSearchIngredients] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(() => {\n    const loadUsers = async () => {\n      const response = await axios.get('http://localhost:5000/api/v1/data');\n      setUsers(response.data.data);\n    };\n\n    loadUsers();\n  }, []);\n\n  const onChangeSearchIngredients = e => {\n    let matches = [];\n    const searchIngredients = e.target.value;\n\n    if (searchIngredients.length > 0) {\n      matches = cocktails.filter(cocktail => {\n        const regex = new RegExp(`${searchIngredients}`, 'gi');\n        return cocktail.Ingredients.match(regex);\n      });\n    }\n\n    console.log('matches', matches);\n    setSuggestions(matches);\n    setSearchIngredients(searchIngredients);\n  }; // const retriveIngredients = () => {\n  //     CocktailsDataService.getIngredients()\n  //     .then(response => {\n  //         console.log(response.data);\n  //         setIngredients(response.data.ingredients)\n  //     })\n  // }\n\n\n  const find = (query, by) => {\n    CocktailsDataService.find(query, by).then(response => {\n      console.log(response.data);\n      setCocktails(response.data.cocktails);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const findByIngredients = () => {\n    find(searchIngredients, \"Ingredients\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group col-lg-4\",\n        style: {\n          width: 600\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Search by ingredient\",\n          value: searchIngredients,\n          onChange: onChangeSearchIngredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), \"value=\", searchIngredients, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            onClick: findByIngredients,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: cocktails.map(cocktail => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-4 pb-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: [\" \", cocktail.Cocktail]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ingredients: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this), cocktail.Ingredients.join(', ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CocktailsList, \"Hhfi6bypwXA5vTdPzBbrxsK7yvQ=\");\n\n_c = CocktailsList;\nexport default CocktailsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CocktailsList\");","map":{"version":3,"sources":["/Users/woosukkang/Desktop/cocktail-builder/cocktail-builder/frontend/src/components/Search/ingredients.js"],"names":["React","useState","useEffect","CocktailsDataService","PlacesAutocomplete","Link","axios","CocktailsList","props","cocktails","setCocktails","searchIngredients","setSearchIngredients","users","setUsers","suggestions","setSuggestions","loadUsers","response","get","data","onChangeSearchIngredients","e","matches","target","value","length","filter","cocktail","regex","RegExp","Ingredients","match","console","log","find","query","by","then","catch","findByIngredients","width","map","Cocktail","join"],"mappings":"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","sourcesContent":["import React, {useState, useEffect }from \"react\";\nimport CocktailsDataService from \"../../services/cocktails.js\"\nimport PlacesAutocomplete from \"react-places-autocomplete\"\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst CocktailsList = props => {\n    const [cocktails, setCocktails] = useState([]);\n    const [searchIngredients, setSearchIngredients] = useState(\"\")\n    const [users, setUsers] = useState([])\n    const [suggestions, setSuggestions] = useState([])\n\n    useEffect(() => {\n        const loadUsers = async () => {\n            const response = await axios.get('http://localhost:5000/api/v1/data');\n            setUsers(response.data.data)\n        }\n        loadUsers();\n    }, [])\n\n    const onChangeSearchIngredients = e => {\n        let matches = []\n        const searchIngredients = e.target.value\n        if (searchIngredients.length > 0) {\n            matches = cocktails.filter(cocktail => {\n                const regex = new RegExp(`${searchIngredients}`, 'gi');\n                return cocktail.Ingredients.match(regex)\n            })\n        }\n        console.log('matches', matches)\n        setSuggestions(matches);\n        setSearchIngredients(searchIngredients)\n    } \n\n\n\n    // const retriveIngredients = () => {\n    //     CocktailsDataService.getIngredients()\n    //     .then(response => {\n    //         console.log(response.data);\n    //         setIngredients(response.data.ingredients)\n    //     })\n    // }\n    const find = (query, by) => {\n        CocktailsDataService.find(query, by).then(response => {\n            console.log(response.data);\n            setCocktails(response.data.cocktails);\n        })\n        .catch(e => {\n            console.log(e);\n        })\n    }\n\n    const findByIngredients = () => {\n        find(searchIngredients, \"Ingredients\")\n    };\n\n    return (\n        <div>\n            <div className=\"row pb-1\">\n                <div className=\"input-group col-lg-4\" style={{width: 600}}>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Search by ingredient\"\n                        value={searchIngredients}\n                        onChange={onChangeSearchIngredients} />\n                        value={searchIngredients}\n                    <div className=\"input-group-append\">\n                        <button\n                            className=\"btn btn-outline-secondary\"\n                            type=\"button\"\n                            onClick={findByIngredients} >\n                                Search\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                {cocktails.map((cocktail) => {\n                    return (\n                        <div className=\"col-lg-4 pb-1\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\"> {cocktail.Cocktail}</h5>\n                                    <p className=\"card-text\">\n                                        <strong>Ingredients: </strong>{cocktail.Ingredients.join(', ')} \n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default CocktailsList\n"]},"metadata":{},"sourceType":"module"}