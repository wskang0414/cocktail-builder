{"ast":null,"code":"var _jsxFileName = \"/Users/woosukkang/Desktop/cocktail-builder/cocktail-builder/frontend/src/components/Search/ingredients.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CocktailsDataService from \"../../services/cocktails.js\";\nimport './suggestions.css';\nimport { Container, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CocktailsList = props => {\n  _s();\n\n  const [cocktails, setCocktails] = useState([]);\n  const [searchIngredients, setSearchIngredients] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [searchImages, setSearchImages] = useState([]);\n  useEffect(() => {\n    retreiveIngredients();\n  }, []);\n\n  const onChangeSearchIngredients = e => {\n    let matches = [];\n    const searchIngredients = e.target.value;\n\n    if (searchIngredients.length > 2) {\n      matches = ingredients.filter(ingredient => {\n        const regex = new RegExp(`${searchIngredients}`, 'gi');\n        return ingredient.match(regex);\n      });\n    }\n\n    console.log('matches', matches);\n    setSuggestions(matches);\n    setSearchIngredients(searchIngredients);\n  };\n\n  const onSuggestHandler = searchIngredients => {\n    setSearchIngredients(searchIngredients);\n    setSuggestions([]);\n  };\n\n  const retreiveIngredients = () => {\n    CocktailsDataService.getIngredients().then(response => {\n      console.log(response.data);\n      setIngredients(response.data);\n    });\n  };\n\n  const find = (query, by) => {\n    CocktailsDataService.find(query, by).then(response => {\n      console.log(response.data);\n      setCocktails(response.data.cocktails);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const findByIngredients = () => {\n    find(searchIngredients, \"Ingredients\");\n  };\n\n  const findByImages = () => {\n    find(setSearchImages, \"Image\");\n  };\n\n  const concat = () => {\n    const msg = \"https://uk.thebar.com\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [msg, findByImages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"float-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"float-child\",\n        style: {\n          width: 600\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Search by ingredient\",\n          value: searchIngredients,\n          onChange: onChangeSearchIngredients,\n          onBlur: () => {\n            setTimeout(() => {\n              setSuggestions([]);\n            }, 100);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), suggestions && suggestions.map((suggestion, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion col-md-12 justify-content-md-center\",\n          onClick: () => onSuggestHandler(suggestion),\n          children: suggestion\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"float-child\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-secondary\",\n          type: \"button\",\n          onClick: findByIngredients,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: cocktails.map(cocktail => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: [\" \", cocktail.Cocktail]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: 'https://uk.thebar.com' + cocktail.Image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Ingredients: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 45\n                  }, this), cocktail.Ingredients.join(', ')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CocktailsList, \"UbYckMpoq4KOKiCB17sNBfGTdDI=\");\n\n_c = CocktailsList;\nexport default CocktailsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CocktailsList\");","map":{"version":3,"sources":["/Users/woosukkang/Desktop/cocktail-builder/cocktail-builder/frontend/src/components/Search/ingredients.js"],"names":["React","useState","useEffect","CocktailsDataService","Container","Row","CocktailsList","props","cocktails","setCocktails","searchIngredients","setSearchIngredients","ingredients","setIngredients","suggestions","setSuggestions","searchImages","setSearchImages","retreiveIngredients","onChangeSearchIngredients","e","matches","target","value","length","filter","ingredient","regex","RegExp","match","console","log","onSuggestHandler","getIngredients","then","response","data","find","query","by","catch","findByIngredients","findByImages","concat","msg","width","setTimeout","map","suggestion","i","cocktail","Cocktail","Image","Ingredients","join"],"mappings":"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","sourcesContent":["import React, {useState, useEffect }from \"react\";\nimport CocktailsDataService from \"../../services/cocktails.js\"\nimport './suggestions.css';\nimport {Container, Row} from 'react-bootstrap';\n\nconst CocktailsList = props => {\n    const [cocktails, setCocktails] = useState([]);\n    const [searchIngredients, setSearchIngredients] = useState('')\n    const [ingredients, setIngredients] = useState([])\n    const [suggestions, setSuggestions] = useState([])\n    const [searchImages, setSearchImages] = useState([])\n\n    useEffect(() => {\n        retreiveIngredients();\n    }, [])\n\n    const onChangeSearchIngredients = e => {\n        let matches = []\n        const searchIngredients = e.target.value\n        if (searchIngredients.length > 2) {\n            matches = ingredients.filter(ingredient => {\n                const regex = new RegExp(`${searchIngredients}`, 'gi');\n                return ingredient.match(regex)\n            })\n        }\n        console.log('matches', matches)\n        setSuggestions(matches);\n        setSearchIngredients(searchIngredients)\n    } \n\n    const onSuggestHandler = (searchIngredients) => {\n        setSearchIngredients(searchIngredients)\n        setSuggestions([])\n    }\n\n    const retreiveIngredients = () => {\n        CocktailsDataService.getIngredients()\n        .then(response => {\n            console.log(response.data);\n            setIngredients(response.data)\n        })\n    }\n    const find = (query, by) => {\n        CocktailsDataService.find(query, by).then(response => {\n            console.log(response.data);\n            setCocktails(response.data.cocktails);\n        })\n        .catch(e => {\n            console.log(e);\n        })\n    }\n\n    const findByIngredients = () => {\n        find(searchIngredients, \"Ingredients\")\n    };\n\n    const findByImages = () => {\n        find(setSearchImages, \"Image\")\n    };\n    \n    const concat = () => {\n        const msg = \"https://uk.thebar.com\";\n        return <div>{msg}{findByImages}</div>\n    }\n\n\n    return (\n        <div>\n            <div className=\"float-container\">\n                <div className=\"float-child\" style={{width: 600}}>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Search by ingredient\"\n                        value={searchIngredients}\n                        onChange={onChangeSearchIngredients} \n                        onBlur={() => {\n                            setTimeout(() => { \n                                setSuggestions([])\n                            }, 100)\n                        }} />\n                        {suggestions && suggestions.map((suggestion, i) =>\n                        <div key={i} className=\"suggestion col-md-12 justify-content-md-center\" \n                        onClick={() => onSuggestHandler(suggestion)}>\n                            {suggestion}</div>\n                        )}\n                    </div>\n                <div className=\"float-child\">\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={findByIngredients} >\n                            Search\n                    </button>\n                </div>\n                </div>\n              <br/> <br/>\n            <div>\n            <div className=\"row\">\n                {cocktails.map((cocktail) => {\n                    return (\n                            <div className=\"col-md-4\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title\"> {cocktail.Cocktail}</h5>\n                                        <img src={'https://uk.thebar.com' + cocktail.Image} />\n                                        <p className=\"card-text\">\n                                            <strong>Ingredients: </strong>{cocktail.Ingredients.join(', ')} \n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                    )\n                })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CocktailsList\n"]},"metadata":{},"sourceType":"module"}