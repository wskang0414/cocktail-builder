{"ast":null,"code":"var _jsxFileName = \"/Users/woosukkang/Desktop/cocktail-builder/cocktail-builder/frontend/src/components/Search/ingredients.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CocktailsDataService from \"../../services/cocktails.js\";\nimport './suggestions.css';\nimport { Helmet } from 'react-helmet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CocktailsList = props => {\n  _s();\n\n  const [cocktails, setCocktails] = useState([]);\n  const [searchIngredients, setSearchIngredients] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(() => {\n    retreiveIngredients();\n  }, []);\n\n  const onChangeSearchIngredients = e => {\n    let matches = [];\n    const searchIngredients = e.target.value;\n\n    if (searchIngredients.length > 2) {\n      matches = ingredients.filter(ingredient => {\n        const regex = new RegExp(`${searchIngredients}`, 'gi');\n        return ingredient.match(regex);\n      });\n    }\n\n    console.log('matches', matches);\n    setSuggestions(matches);\n    setSearchIngredients(searchIngredients);\n  };\n\n  const onSuggestHandler = searchIngredients => {\n    setSearchIngredients(searchIngredients);\n    setSuggestions([]);\n  };\n\n  const retreiveIngredients = () => {\n    CocktailsDataService.getIngredients().then(response => {\n      console.log(response.data);\n      setIngredients(response.data);\n    });\n  };\n\n  const find = (query, by) => {\n    CocktailsDataService.find(query, by).then(response => {\n      console.log(response.data);\n      setCocktails(response.data.cocktails);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const findByIngredients = () => {\n    find(searchIngredients, \"Ingredients\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"style\", {\n        children: 'body {background-color: orange; }'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"float-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"float-child\",\n        style: {\n          width: 600\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Search by ingredient\",\n          value: searchIngredients,\n          onChange: onChangeSearchIngredients,\n          onBlur: () => {\n            setTimeout(() => {\n              setSuggestions([]);\n            }, 100);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), suggestions && suggestions.map((suggestion, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion col-md-12 justify-content-md-center\",\n          onClick: () => onSuggestHandler(suggestion),\n          children: suggestion\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"float-child\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Button btn btn-outline-secondary\",\n          type: \"button\",\n          onClick: findByIngredients,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: cocktails.map(cocktail => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"BeerListItem-main-card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    children: [\" \", cocktail.Cocktail]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: 'https://uk.thebar.com' + cocktail.Image,\n                    alt: \"cocktail\",\n                    className: \"BeerListItem-img\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-text\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Ingredients: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 45\n                    }, this), cocktail.Ingredients.join(', ')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CocktailsList, \"+eKBcGkZ31L8cP0YomB1rOS+XKY=\");\n\n_c = CocktailsList;\nexport default CocktailsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CocktailsList\");","map":{"version":3,"sources":["/Users/woosukkang/Desktop/cocktail-builder/cocktail-builder/frontend/src/components/Search/ingredients.js"],"names":["React","useState","useEffect","CocktailsDataService","Helmet","CocktailsList","props","cocktails","setCocktails","searchIngredients","setSearchIngredients","ingredients","setIngredients","suggestions","setSuggestions","retreiveIngredients","onChangeSearchIngredients","e","matches","target","value","length","filter","ingredient","regex","RegExp","match","console","log","onSuggestHandler","getIngredients","then","response","data","find","query","by","catch","findByIngredients","width","setTimeout","map","suggestion","i","cocktail","Cocktail","Image","Ingredients","join"],"mappings":"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","sourcesContent":["import React, {useState, useEffect }from \"react\";\nimport CocktailsDataService from \"../../services/cocktails.js\"\nimport './suggestions.css';\nimport { Helmet } from 'react-helmet';\n\nconst CocktailsList = props => {\n    const [cocktails, setCocktails] = useState([]);\n    const [searchIngredients, setSearchIngredients] = useState('')\n    const [ingredients, setIngredients] = useState([])\n    const [suggestions, setSuggestions] = useState([])           \n\n    useEffect(() => {\n        retreiveIngredients();\n    }, [])\n\n    const onChangeSearchIngredients = e => {\n        let matches = []\n        const searchIngredients = e.target.value\n        if (searchIngredients.length > 2) {\n            matches = ingredients.filter(ingredient => {\n                const regex = new RegExp(`${searchIngredients}`, 'gi');\n                return ingredient.match(regex)\n            })\n        }\n        console.log('matches', matches)\n        setSuggestions(matches);\n        setSearchIngredients(searchIngredients)\n    } \n\n    const onSuggestHandler = (searchIngredients) => {\n        setSearchIngredients(searchIngredients)\n        setSuggestions([])\n    }\n\n    const retreiveIngredients = () => {\n        CocktailsDataService.getIngredients()\n        .then(response => {\n            console.log(response.data);\n            setIngredients(response.data)\n        })\n    }\n    const find = (query, by) => {\n        CocktailsDataService.find(query, by).then(response => {\n            console.log(response.data);\n            setCocktails(response.data.cocktails);\n        })\n        .catch(e => {\n            console.log(e);\n        })\n    }\n\n    const findByIngredients = () => {\n        find(searchIngredients, \"Ingredients\")\n    };\n\n    return (\n        <div>\n            <Helmet>\n            <style>{'body {background-color: orange; }'}</style>\n            </Helmet>\n            <div className=\"float-container\">\n                <div className=\"float-child\" style={{width: 600}}>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Search by ingredient\"\n                        value={searchIngredients}\n                        onChange={onChangeSearchIngredients} \n                        onBlur={() => {\n                            setTimeout(() => { \n                                setSuggestions([])\n                            }, 100)\n                        }} />\n                        {suggestions && suggestions.map((suggestion, i) =>\n                        <div key={i} className=\"suggestion col-md-12 justify-content-md-center\" \n                        onClick={() => onSuggestHandler(suggestion)}>\n                            {suggestion}</div>\n                        )}\n                    </div>\n                <div className=\"float-child\">\n                    <button\n                        className=\"Button btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={findByIngredients} >\n                            Search\n                    </button>\n                </div>\n                </div>\n              <br/> <br/>\n            <div>\n            <div className=\"row\">\n                {cocktails.map((cocktail) => {\n                    return (\n                        <div className=\"col-md-4\">\n                            <div className=\"BeerListItem-main-card\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title\"> {cocktail.Cocktail}</h5>\n                                        <img src={'https://uk.thebar.com' + cocktail.Image} \n                                        alt=\"cocktail\"\n                                        className=\"BeerListItem-img\"/>\n                                        <p className=\"card-text\">\n                                            <strong>Ingredients: </strong>{cocktail.Ingredients.join(', ')} \n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CocktailsList\n"]},"metadata":{},"sourceType":"module"}