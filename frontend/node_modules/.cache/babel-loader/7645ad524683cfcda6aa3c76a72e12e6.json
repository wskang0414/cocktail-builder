{"ast":null,"code":"var _jsxFileName = \"/Users/woosukkang/Desktop/cocktail-builder/cocktail-builder/frontend/src/components/Search/ingredients.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CocktailsDataService from \"../../services/cocktails.js\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CocktailsList = props => {\n  _s();\n\n  const [cocktails, setCocktails] = useState([]);\n  const [searchIngredients, setSearchIngredients] = useState(\"\");\n  const [ingredients, setIngredients] = useState({});\n  const [text, setText] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(() => {\n    // retrieveIngredients();\n    const loadSugs = async () => {\n      const response = await axios.get('https://localhost:5000/api/v1/data');\n      setIngredients(response.data.ingredients);\n    };\n\n    loadSugs();\n  }, []);\n\n  const onChangeSearchIngredients = text => {\n    let matches = [];\n\n    if (text.length > 0) {\n      matches = ingredients.filter(ingredient => {\n        const regex = new RegExp(`${text}`, \"gl\");\n        return ingredient.Ingredients.match(regex);\n      });\n    }\n\n    console.log('matches', matches);\n    setSuggestions(matches);\n    setText(text);\n  }; // const retriveIngredients = () => {\n  //     CocktailsDataService.getIngredients()\n  //     .then(response => {\n  //         console.log(response.data);\n  //         setIngredients(response.data.ingredients)\n  //     })\n  // }\n\n\n  const find = (query, by) => {\n    CocktailsDataService.find(query, by).then(response => {\n      console.log(response.data);\n      setCocktails(response.data.cocktails);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const findByIngredients = () => {\n    find(searchIngredients, \"Ingredients\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group col-lg-4\",\n        style: {\n          width: 600\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Search by ingredient\",\n          value: searchIngredients,\n          onChange: e => onChangeSearchIngredients(e.target.value),\n          value: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            onClick: findByIngredients,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: cocktails.map(cocktail => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-4 pb-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: [\" \", cocktail.Cocktail]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ingredients: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 41\n                }, this), cocktail.Ingredients.join(', ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CocktailsList, \"PqXkXA+VkIHKISi6bZir2Up/iLg=\");\n\n_c = CocktailsList;\nexport default CocktailsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CocktailsList\");","map":{"version":3,"sources":["/Users/woosukkang/Desktop/cocktail-builder/cocktail-builder/frontend/src/components/Search/ingredients.js"],"names":["React","useState","useEffect","CocktailsDataService","Link","axios","CocktailsList","props","cocktails","setCocktails","searchIngredients","setSearchIngredients","ingredients","setIngredients","text","setText","suggestions","setSuggestions","loadSugs","response","get","data","onChangeSearchIngredients","matches","length","filter","ingredient","regex","RegExp","Ingredients","match","console","log","find","query","by","then","catch","e","findByIngredients","width","target","value","map","cocktail","Cocktail","join"],"mappings":"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","sourcesContent":["import React, {useState, useEffect }from \"react\";\nimport CocktailsDataService from \"../../services/cocktails.js\"\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst CocktailsList = props => {\n    const [cocktails, setCocktails] = useState([]);\n    const [searchIngredients, setSearchIngredients] = useState(\"\")\n    const [ingredients, setIngredients] = useState({\n\n    })\n    const [text, setText] = useState('')\n    const [suggestions, setSuggestions] = useState([])\n\n    useEffect(() => {\n        // retrieveIngredients();\n        const loadSugs = async () => {\n            const response = await axios.get('https://localhost:5000/api/v1/data')\n            setIngredients(response.data.ingredients)\n        }\n        loadSugs();\n    }, [])\n\n    const onChangeSearchIngredients = (text) => {\n        let matches = []\n        if (text.length > 0) {\n            matches = ingredients.filter(ingredient => {\n                const regex = new RegExp(`${text}` ,\"gl\");\n                return ingredient.Ingredients.match(regex)\n            })\n        }\n        console.log('matches', matches)\n        setSuggestions(matches)\n        setText(text)\n    }\n\n\n    // const retriveIngredients = () => {\n    //     CocktailsDataService.getIngredients()\n    //     .then(response => {\n    //         console.log(response.data);\n    //         setIngredients(response.data.ingredients)\n    //     })\n    // }\n    const find = (query, by) => {\n        CocktailsDataService.find(query, by).then(response => {\n            console.log(response.data);\n            setCocktails(response.data.cocktails);\n        })\n        .catch(e => {\n            console.log(e);\n        })\n    }\n\n    const findByIngredients = () => {\n        find(searchIngredients, \"Ingredients\")\n    };\n\n    return (\n        <div>\n            <div className=\"row pb-1\">\n                <div className=\"input-group col-lg-4\" style={{width: 600}}>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Search by ingredient\"\n                        value={searchIngredients}\n                        onChange={e => onChangeSearchIngredients(e.target.value)}\n                        value={text} />\n                        \n                    <div className=\"input-group-append\">\n                        <button\n                            className=\"btn btn-outline-secondary\"\n                            type=\"button\"\n                            onClick={findByIngredients} >\n                                Search\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                {cocktails.map((cocktail) => {\n                    return (\n                        <div className=\"col-lg-4 pb-1\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\"> {cocktail.Cocktail}</h5>\n                                    <p className=\"card-text\">\n                                        <strong>Ingredients: </strong>{cocktail.Ingredients.join(', ')} \n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default CocktailsList\n"]},"metadata":{},"sourceType":"module"}